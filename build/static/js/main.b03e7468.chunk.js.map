{"version":3,"sources":["ViewComponents/NavBar.js","LogicalFunctions/GetToday.js","reducers.js","LogicalFunctions/GetTagList.js","GlobalStore/Store.js","GlobalStore/EventActions.js","SharedViewComponents/EventCards.js","SharedViewComponents/InfoFooter.js","SharedViewComponents/ListScreen.js","SharedViewComponents/Loading.js","LogicalFunctions/SortEvents.js","LogicalFunctions/SearchByDate.js","LogicalFunctions/SearchByTag.js","ViewComponents/DebugginEventLister.js","LogicalFunctions/SearchByEvent.js","SharedViewComponents/ShowTagOptions.js","GlobalStore/TagActions.js","GlobalStore/LocationActions.js","SharedViewComponents/DistanceSlider.js","GlobalStore/TimeActions.js","SharedViewComponents/ToolbarFooter.js","SharedViewComponents/SingleCard.js","ViewComponents/MapView.js","LogicalFunctions/DistanceBetweenPoints.js","LogicalFunctions/FilterByDistance.js","LogicalFunctions/RunEventFilters.js","SharedViewComponents/FilterEvents.js","Services/FetchEventsNearUser.js","Services/GetAllEvents.js","ViewComponents/ListView.js","Tests/TestScreen.js","ViewComponents/MainView.js","ViewComponents/About.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","GetToday","date","Date","setDate","getDate","toISOString","substr","initialState","range","chosenTags","allTags","categoryTitle","tags","isChecked","concat","eventSearch","filteredEvents","allEvents","userLocation","selectedDate","timeNow","selectedFilters","timeFilter","tagFilter","locationFilter","rootReducer","state","action","type","Object","assign","tag","newTags","filter","time","store","createStore","firstReducer","composeWithDevTools","setAllEvents","events","setFilteredEvents","EventCard","connect","useStore","useState","getState","setEvents","location","setLocation","filtered","setFiltered","word","setWord","useSelector","useEffect","printAllEvents","filtering","happening","event","name","fi","sv","en","includes","cardEvents","map","i","dateAndTime","moment","event_dates","starting_day","format","address","street_address","postal_code","locality","infoUrl","info_url","disable","buttonColor","distance","L","latLng","latitude","longitude","distanceTo","lat","lon","toFixed","Card","key","style","marginTop","Body","Row","paddingBottom","Col","Title","Text","xs","Button","target","disabled","onChange","e","value","InfoFooter","ListScreen","Container","marginBottom","Loading","props","React","times","setTimes","load","loading","loaded","setTimeout","Sorting","changeArrays","x","y","temp","length","SearchByDate","selectedDay","undefined","startTime","endTime","ending_day","getTime","diffStar","diffEnd","push","Sort","SearchByTag","selectedTagsInCategories","selectedTags","forEach","tagObject","Array","isArray","some","includesTag","ShowAll","dispatch","useDispatch","letEvents","toLowerCase","SearchByEvent","ShowTagOptions","options","uselessState","setUselessState","boxChecked","tagID","findIndex","tagsCopy","checked","getTagStatus","Form","Check","label","setUserLocation","long","setLocationRange","Slider","min","max","size","tooltip","parseInt","ToolbarFooter","fluid","md","SingleCard","desc","MapView","zoom","lng","iconMarkup","renderToStaticMarkup","color","customMarkerIcon","divIcon","html","DefaultIcon","icon","iconUrl","shadowUrl","iconShadow","Marker","prototype","Map","center","TileLayer","url","attribution","position","Popup","description","intro","Circle","radius","lat1","lon1","lat2","lon2","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","FilterByDistance","DistanceBetweenPoints","isInRange","RunEventFilters","SortEvents","Filtteri","text","setEvent","setArea","open","setOpen","handleClose","ShowFilters","onClick","Modal","show","onHide","Header","placeholder","HandleSlider","Footer","ToDay","document","getElementById","Fetching","lati","area","a","fetch","data","response","json","JSON","parse","then","ok","Error","catch","error","console","ListView","setSelectedDay","setLoading","setLoaded","setLat","setLon","fetchData","Fetch","navigator","geolocation","Coords","GetAllEvents","enableHighAccuracy","timeout","maximumAge","watchPosition","pos","crd","coords","clearWatch","err","toDay","dayNew","eventNew","areaNew","log","TestScreen","margin","MainView","setKey","Tabs","defaultActiveKey","onSelect","k","Tab","eventKey","title","AboutView","App","path","component","ShowAboutUs","Boolean","window","hostname","match","ReactDOM","render","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b03e7468.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Nav, Navbar } from 'react-bootstrap'\r\n\r\n\r\n\r\nconst NavBar = () => {\r\n\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand href=\"/\">WalkInEvents</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"/\">Events</Nav.Link>\r\n                    <Nav.Link href=\"/about\">About</Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default NavBar;","export default function GetToday() {\r\n\r\n    // Otetaan päivämäärästä ISOString muoto jotta saadaan datepickeriin päivämäärä näkyviin\r\n    let date = new Date();\r\n    date.setDate(date.getDate() + 0);\r\n    let isoDate = date.toISOString().substr(0, 10);\r\n\r\n\r\n\r\n\r\n    return isoDate\r\n\r\n\r\n\r\n}","import { combineReducers } from 'redux'\r\nimport GetToday from './LogicalFunctions/GetToday'\r\nimport GetTagList from './LogicalFunctions/GetTagList'\r\n\r\n//rootReducer = combineReducers({})\r\n/* // Jatkossa ehkä tarvittavia kenttiä: \r\nsearchLocation, \r\n\r\n*/\r\nlet initialState = {\r\n    range: 1,\r\n    chosenTags: [],\r\n    allTags: GetTagList(),\r\n    //tagCategoryTitles: GetTagCategoryTitles(),\r\n    eventSearch: [],\r\n    filteredEvents: [],\r\n    allEvents: [],\r\n    // is set by GetUserPosition during runtime\r\n    userLocation: {},\r\n    selectedDate: GetToday(),\r\n    timeNow: GetToday(),\r\n    selectedFilters: {\r\n        timeFilter: true,\r\n        tagFilter: true,\r\n        locationFilter: true\r\n    }\r\n}\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'ADD_TAG':\r\n            // Yhdistetään kolme objectia: tyhjä objecti, nykyinen state ja\r\n            // tagilista, jossa myös uusi tagi\r\n            return Object.assign({}, state,\r\n                { chosenTags: [...state.chosenTags, action.tag] })\r\n\r\n        case 'REMOVE_TAG':\r\n            // Create new array of tags which are not the removed tag\r\n            let newTags = state.chosenTags.filter(tag => tag != action.tag)\r\n            return Object.assign({}, state,\r\n                { chosenTags: [newTags] })\r\n\r\n        case 'SET_CHOSEN_TAGS':\r\n            return Object.assign({}, state,\r\n                { chosenTags: action.tags })\r\n\r\n        // Time\r\n        case 'SET_TIME_NOW':\r\n            return Object.assign({}, state,\r\n                { timeNow: action.time })\r\n\r\n        case 'SET_SELECTED_DATE':\r\n            return Object.assign({}, state,\r\n                { selectedDate: action.selectedDate })\r\n\r\n        // Location\r\n        case 'SET_USER_LOCATION':\r\n            return Object.assign({}, state,\r\n                { userLocation: action.userLocation })\r\n\r\n        case 'SET_LOCATION_RANGE':\r\n            return Object.assign({}, state,\r\n                { range: action.range })\r\n\r\n        // Events\r\n        case 'SET_ALL_EVENTS':\r\n            return Object.assign({}, state,\r\n                { allEvents: action.allEvents })\r\n\r\n        case 'SET_FILTERED_EVENTS':\r\n            return Object.assign({}, state,\r\n                { filteredEvents: action.filteredEvents })\r\n\r\n        case 'SET_EVENT_SEARCH':\r\n            return Object.assign({}, state,\r\n                { eventSearch: action.eventSearch })\r\n\r\n        default:\r\n            return initialState\r\n    }\r\n}\r\n\r\n\r\n/* const rootReducer = combineReducers({\r\n    firstReducer\r\n}) */\r\n\r\nexport default rootReducer","\r\n// This function returns all tags split into categories\r\n\r\nexport default function GetTagList() {\r\n\r\n    let children = [\"babies\", \"children (age groups)\", \"children (family members)\", \"Children and families\", \"Daycare and education\", \"early childhood education and care\", \"families with babies\", \"families with children\", \"families\", \"Kids\", \"Lastentapahtumat\", \"playgrounds\", \"preschoolers (age group)\", \"pupils\", \"Pupils\", \"toddlers\", \"playing (children's games)\"]\r\n    let theatre = [\"children's theatres (theatre for children)\", \"circus (performing arts)\", \"plays\", \"Teatteri ja sirkus\", \"Teatteri\"]\r\n    let music = [\"a cappella\", \"art music\", \"church music\", \"Concerts and clubs\", \"concerts\", \"games with music\", \"jazz\", \"live music\", \"music clubs\", \"music dramas\", \"music\", \"musicals\", \"Musiikki\", \"operas\", \"organ music\", \"rock music\", \"singing games\", \"songs\"]\r\n    let dance = [\"ballet (art forms)\", \"ballets (works)\", \"contemporary dance\", \"dance (performing arts)\", \"Tanssi\"]\r\n    let exhibitions = [\"art exhibitions\", \"art museums\", \"exhibitions\", \"Exhibitions\", \"Kuvataide\", \"museums\", \"Näyttelyt\"]\r\n    let sports_and_outdoors = [\"billiards\", \"clubs (recreational)\", \"exercise games\", \"family sports\", \"games\", \"Games\", \"gymnastics\", \"ice hockey\", \"outdoor games\", \"outdoor recreation\", \"physical training\", \"residents’ parks\", \"sports contests\", \"sports\", \"winter sports\"]\r\n    let fine_arts = [\"art\", \"contemporary art\", \"culture\", \"fine arts\", \"literary art\", \"literature\", \"Literature\"]\r\n    let design = [\"ceramic art\", \"ceramics\", \"craft skills\", \"design (artistic creation)\", \"painting (visual arts)\"]\r\n    let cultural_events = [\"cinema (art forms)\", \"comedy films\", \"cultural events\", \"Elokuva ja media\", \"Elokuvat\", \"films\", \"horror\", \"journalism\", \"stand-up comedy\", \"theatre events\", \"theatre\"]\r\n    let other_tags = [\"Annantalo\", \"Caisa\", \"courses (societal objects)\", \"Courses\", \"Culture and leisure\", \"Englanti (TV)\", \"Englanti\", \"Entresse Library\", \"Espoo\", \"Events and tips\", \"events\", \"festivals\", \"Finnish language\", \"food\", \"General\", \"guidance\", \"HelMet\", \"Helsinki\", \"Immigrants\", \"Infonäytöt (Helsinki)\", \"Juttuja kirjastosta\", \"Kannelmäen kirjasto \", \"Kanneltalo\", \"Kauniainen\", \"Kirjallisuus ja sanataide\", \"languages\", \"Lauttasaari library\", \"Libraries and services\", \"libraries\", \"Libraries\", \"Library Oodi\", \"Malminkartano Library\", \"Malmitalo\", \"migrants\", \"morning activities\", \"Muu\", \"Muut tapahtumat\", \"Normaali\", \"Nuorille\", \"nursery rhyme\", \"Opastuskalenteri\", \"Other events\", \"other languages\", \"Oulunkylä Library\", \"Palvelut\", \"participation\", \"performing arts\", \"Pukinmäen kirjasto \", \"Rikhardinkatu Library\", \"Ruotsi (TV)\", \"Ruotsi\", \"Russian language\", \"Russian\", \"Savoy-teatteri\", \"senior citizens\", \"Senior citizens\", \"Sirkus\", \"Social services and health care\", \"Stoa\", \"students\", \"Students\", \"Suomi\", \"Teens\", \"Tikkurilan kirjasto \", \"Training and courses\", \"Vantaa\", \"Vuotalo\", \"well-being\", \"young people\", \"Youth\", \"Афиша\", \"Events\", \"handcrafting\", \"trips\"]\r\n    let talks_and_workshops = [\"Book clubs\", \"conversation\", \"democracy\", \"hobby crafting\", \"Language Cafés and discussion groups\", \"lectures\", \"Luennot ja keskustelut\", \"political decision making\", \"reading\", \"story hours\", \"Story hours\", \"town and city councils\", \"Työpajat\", \"urban policy\", \"workshops\"]\r\n    let online_and_tv = [\"Etätapahtumat\", \"Näkyy TV-sovelluksessa\", \"remote participation\", \"Suomi (TV)\"]\r\n\r\n    // These tags appear rarely and are thrown in with \"other tags\"\r\n    let rare_tags = [\"sustainable development\", \"Pilates method\", \"drawing (artistic creation)\", \"children's music\", \"opera (arts)\", \"contemporary circus\", \"photography exhibitions\", \"popular music\", \"Nöykkiö Library\", \"Bibban just nu\", \"dance events\", \"chair exercise\", \"yoga\", \"stretching exercise\", \"folk music (traditional music)\", \"health enhancing physical activity\", \"jewellery\", \"handicrafts\", \"Suutarilan kirjasto \", \"Maunula Library\", \"responsibility (properties)\", \"Muut kulttuuritapahtumat (monitaide)\", \"fairy tales\", \"nature\", \"technology\", \"communications technology\", \"heavy metal\", \"music theatres\", \"film music\", \"architecture\", \"figure skating\", \"ice dancing\", \"Pitäjänmäen kirjasto \", \"walking tours\", \"homosexuality\", \"Pasila Library\", \"environment\", \"art galleries\", \"Christmas\", \"adults\", \"burlesque\", \"health services\", \"photographic art\", \"modern art\", \"Lumo Library\", \"Itäkeskuksen kirjasto \", \"social services\", \"Aikuiset\", \"chamber music\", \"Martinlaakson kirjasto \", \"food culture\", \"entertainment\", \"installations (works of art)\", \"children's culture\", \"history\", \"tradition\", \"virtuality\", \"Kallio Library\", \"video art\", \"Sandkulla bibliotek \", \"Myyrmäen kirjasto \", \"Hakunilan kirjasto \", \"Library Apple\", \"literature circles\", \"tapahtuma\", \"teaching and instruction\", \"comedy (style)\", \"tourism\", \"water systems\", \"Ateneum\", \"Vuosaari Library\", \"Christmas tradition\", \"Malmin kirjasto \", \"recycling\", \"bingo\", \"library services\", \"Internet\", \"Stoan\", \"Herttoniemen kirjasto \", \"punk rock\", \"shows\", \"urban culture\", \"perinnetapahtuma\", \"electronic popular music\", \"piano music\", \"Egyptology\", \"Etelä-Haaga Library\", \"social work\", \"Stoa (Helsinki)\", \"water quality\", \"Design ja käsityö\", \"Lapset\", \"sculpture (visual arts)\", \"Harrastuspassi (Helsinki)\", \"sailing\", \"Töölön kirjasto \", \"Job seekers\", \"fairs and markets\", \"Tapiola Library\", \"Etäosallistuminen\", \"choral music\", \"health\", \"blues (Afro-American music)\", \"world music\", \"Vapaa-ajan kurssit\", \"body awareness\", \"Kalajärven kirjasto \", \"classics\", \"water protection\", \"Kiasma\", \"running\", \"furniture\", \"sports events\", \"beauty care sector\", \"harp instruments\", \"camps\", \"self-management (personal development)\", \"wines\", \"Ohjelmasivun alanosto\", \"voyages and travels\", \"flute music\", \"spelman music\", \"astronomy\", \"walking (motion)\", \"Midsummer\", \"music technology\", \"early music\", \"motorcycling\", \"carnivals (celebrations)\", \"Saint Lucy's Day\", \"gardening\", \"Easter\", \"physical well-being\", \"media art\", \"May Day\", \"boating\", \"hamburgers\", \"landscape architecture\", \"documentary films\", \"collections\", \"prehistory\", \"multiculturalism\", \"Sibelius Violin Competition\", \"events related to mutual activity\", \"working life\", \"horse sports\", \"show jumping\", \"ryijy rugs\", \"art handicraft\", \"magicians\", \"beer\", \"startup companies\", \"growth companies\", \"beverages\", \"beverage industry\", \"Venäjänkielinen kirjasto\", \"Suomenlinnan kirjasto \", \"floorball\", \"vegetation\", \"comic art\", \"comics\", \"football\", \"ball sports\", \"concert activity\", \"auction\", \"charity events\", \"independence days\", \"child protection\", \"archaeology\", \"traffic\", \"symphony orchestras\", \"dog shows\", \"forests\", \"climate changes\", \"climate\", \"science\", \"maritime navigation\", \"primigravida\", \"maternity leave\", \"pop up phenomena\", \"tableware\", \"vintage\", \"parenthood\", \"stay-at-home mothers\", \"maternity\", \"mothers\", \"skateboarding\", \"light music\", \"hard rock\", \"fashion\", \"rockabilly music\", \"basketball\", \"Muotoilu\", \"cricket\", \"light music orchestras\", \"podcasting\", \"Helsinki residents\", \"urban nature\", \"nature sites\", \"nature conservation\", \"nature tourism\", \"video artists\", \"sound art\", \"musiikki\", \"experimental music\", \"festivaali\", \"Puistolan kirjasto \", \"celebrations\", \"Tapanilan kirjasto \", \"skiing\", \"Arabianrannan kirjasto \", \"schlager music\", \"folk rock\", \"rhythm and blues music\", \"improvisations (compositions)\", \"music for meditation\", \"safety and security\", \"stars\", \"motoring\"]\r\n    \r\n    // each object has a title(string) and list of tags(array)\r\n    let tagArray = [\r\n        {categoryTitle: \"Children\", tags: children, isChecked: true},\r\n        {categoryTitle: \"Theatre\", tags: theatre, isChecked: true},\r\n        {categoryTitle: \"Music\", tags: music, isChecked: true},\r\n        {categoryTitle: \"Dance\", tags: dance, isChecked: true},\r\n        {categoryTitle: \"Exhibitions\", tags: exhibitions, isChecked: true},\r\n        {categoryTitle: \"Sports and Outdoors\", tags: sports_and_outdoors, isChecked: true},\r\n        {categoryTitle: \"Fine Arts\", tags: fine_arts, isChecked: true},\r\n        {categoryTitle: \"Design\", tags: design, isChecked: true},\r\n        {categoryTitle: \"Cultural Events\", tags: cultural_events, isChecked: true},\r\n        {categoryTitle: \"Talks and Workshops\", tags: talks_and_workshops, isChecked: true},\r\n        {categoryTitle: \"Online and TV\", tags: online_and_tv, isChecked: true},\r\n        {categoryTitle: \"Other Tags\", tags: other_tags.concat(rare_tags), isChecked: true},\r\n    ]\r\n    \r\n    return tagArray\r\n}","import { createStore, combineReducers } from 'redux';\r\nimport firstReducer from '../reducers'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\n/* const reducer = combineReducers({\r\n    first: firstReducer\r\n  })\r\n  \r\nconst store = createStore(reducer) */\r\n\r\nconst store = createStore(\r\n    firstReducer,\r\n    composeWithDevTools()\r\n)\r\n\r\nexport default store","//payload is array of events\r\nexport function setAllEvents(events) {\r\n    return ({\r\n        type: 'SET_ALL_EVENTS',\r\n        allEvents: events\r\n    })\r\n}\r\n\r\n//payload is array of events\r\nexport function setFilteredEvents(events) {\r\n    return ({\r\n        type: 'SET_FILTERED_EVENTS',\r\n        filteredEvents: events\r\n    })\r\n}\r\n\r\nexport function setEventSearch(eventSearch) {\r\n    return ({\r\n        type: 'SET_EVENT_SEARCH',\r\n        eventSearch\r\n    })\r\n}\r\n/*  */","import React, { useEffect, useState } from 'react'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Card from 'react-bootstrap/Card'\r\nimport store from '../GlobalStore/Store'\r\nimport { connect, useSelector, useDispatch } from 'react-redux'\r\nimport {setFilteredEvents} from '../GlobalStore/EventActions'\r\nimport { useStore } from 'react-redux'\r\nimport moment from 'moment'\r\nimport L from 'leaflet'\r\n\r\n\r\nexport default function EventCard() {\r\n    connect()\r\n    const store = useStore()\r\n    //let events = store.getState().filteredEvents\r\n    //const [events, setEvents] = useState(store.getState().filteredEvents)\r\n    const [events, setEvents] = useState(store.getState().filteredEvents)\r\n    const [location, setLocation] = useState([])\r\n    const [filtered, setFiltered] = useState(store.getState().filteredEvents)\r\n    const [word, setWord] = useState('')\r\n    const state = useSelector(state => state)\r\n    const filteredEvents = state.filteredEvents\r\n    \r\n    useEffect(() => {\r\n   \r\n        if (word===''){\r\n        printAllEvents()\r\n        }\r\n    })\r\n\r\n\r\n   \r\n\r\n  const SeekName = (e) => {\r\n    let happening;\r\n    happening = e.target.value\r\n    setWord(happening)\r\n    filtering(happening)\r\n\r\n  }\r\n\r\n  const filtering = (happening) =>{\r\n\r\n    setFiltered(events.filter(event => {\r\n      let name=event.name.fi;\r\n        if (event.name.fi === null) {\r\n            name=event.name.sv;\r\n            if (event.name.sv===null){\r\n                name=event.name.en\r\n            }\r\n        }\r\n        return name.includes(happening)===true\r\n    }))\r\n  }\r\n\r\n\r\n    const printAllEvents = () => {\r\n        setEvents(store.getState().filteredEvents)\r\n        setLocation(store.getState().userLocation)\r\n        setFiltered(store.getState().filteredEvents)\r\n    }\r\n\r\n\r\n    let cardEvents = filtered.map((events, i) => {\r\n        \r\n        let name = events.name.fi; \r\n        let dateAndTime = moment(`${events.event_dates.starting_day}`).format(\"DD.MM.YYYY HH:mm\")\r\n        let address = events.location.address.street_address + ', ' +\r\n            events.location.address.postal_code + ' ' +\r\n            events.location.address.locality;\r\n        let infoUrl = events.info_url;\r\n        let disable = false;\r\n        let buttonColor = \"primary\"\r\n        if (infoUrl === null) {\r\n            disable = true\r\n            buttonColor = \"secondary\"\r\n        }\r\n\r\n        let distance = L.latLng(location.latitude, location.longitude).distanceTo(L.latLng(events.location.lat, events.location.lon)).toFixed(0) + ' m';\r\n\r\n\r\n        return (\r\n            <Card key={i} style={{ marginTop: 10 }} bg='light'>\r\n                <Card.Body>\r\n                    <Row style={{ paddingBottom: 20 }}>\r\n                        <Col>\r\n                            <Card.Title>{name}</Card.Title>\r\n                            <Card.Text>{dateAndTime}<br />{address}</Card.Text>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={6}>{distance}</Col>\r\n                        <Col xs={6}>\r\n                            {/* Jos otetaan lisätietoa ominaisuus käyttöön, tulee allaoleva rivi kommentoida pois.*/}\r\n                            {/* <Button variant=\"info\" style={{ marginRight: 10 }}>Show more</Button> */}\r\n                            <Button href={infoUrl} target=\"_blank\" variant={buttonColor} disabled={disable}>WWW</Button>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n\r\n            </Card>\r\n\r\n\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"App\">\r\n             <p>name: <input id=\"eventos\"  onChange={SeekName} /></p>\r\n            {cardEvents}\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function InfoFooter() {\r\n    return (\r\n        <div className=\"infofooter\">\r\n            <p>Copyright (c) 2020 Walk-In-Events.</p>\r\n        </div>\r\n    )\r\n}\r\n//content div a needs a margin-bottom?","import React from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\n//import Row from 'react-bootstrap/Row'\r\n//import Col from 'react-bootstrap/Col'\r\nimport EventCard from './EventCards'\r\nimport Footer from './InfoFooter'\r\n\r\nconst ListScreen = () => {\r\n\r\n    return (\r\n        <div>\r\n            <Container style={{ marginBottom: 110 }}>\r\n\r\n                <EventCard />\r\n            </Container>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListScreen","import React from 'react'\r\n\r\n\r\nexport default function Loading(props) {\r\n\r\n    //const [point, setPoint] = React.useState('')\r\n    const [times, setTimes] = React.useState(0)\r\n    //    const [point, setPoint] = React.useState('')\r\n    // Latauksen aikana Loading sanan perään tulee pisteitä sekunnin tahtiin. \r\n    let load = props.loading;\r\n\r\n    //Mikäli tämä on ensimmäinen lataus niin lähtee pisteet rullailemaan.\r\n    if (load === 'LOADING' && !props.loaded) {\r\n        setTimeout(() => {\r\n            setTimes(times + 1)\r\n        }\r\n            , 1000)\r\n    }\r\n\r\n    // Oletuksena on että mikäli 30 sekunttiin ei listaa ole tullut ruutuun niin meille heitetään \r\n    // 'jokin meni vikaan' teksti.\r\n    if (times < 30) {\r\n        return (\r\n            <div>\r\n                {load}\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                Something isn't right :(\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","\r\nexport default function Sorting(filtered) {\r\n\r\n    //Tässä on Bubblesorttaus... \r\n    const changeArrays = (filtered, x, y) => {\r\n        let temp = filtered[x];\r\n        filtered[x] = filtered[y];\r\n        filtered[y] = temp;\r\n    };\r\n\r\n    for (let i = 0; i < filtered.length - 1; i++) {\r\n        for (let x = 0; x < filtered.length - i - 1; x++) {\r\n            if (filtered[x].event_dates.starting_day > filtered[x + 1].event_dates.starting_day) {\r\n                changeArrays(filtered, x, x + 1)\r\n            }\r\n        }\r\n    }\r\n    return filtered\r\n\r\n}","import moment from 'moment'\r\nimport Sort from './SortEvents'\r\n\r\n\r\n\r\nexport default function SearchByDate(events, selectedDay) {\r\n\r\n  // Funktioon tuodaan kaikki eventit mitkä paketissa on, mikäli tämä on ainut/ensimmäinen filtteri, niin events on se iso lista\r\n  // tuodaan päivämäärä jota haetaan\r\n\r\n  //luodaan uusi taulukkomuuttuja\r\n  let filtered = [];\r\n  \r\n  if (selectedDay !== 0 && events !== undefined) {\r\n    \r\n    //käydään lista läpi ja tarkastellaan onko tapahtumalla ja toivotulla päivämäärällä samatieto.\r\n    events.map((event) => {\r\n      \r\n      \r\n      //tässä olisi voitu olla käyttämättä momenttia, mutta käytin sen takia että pysyy ajatus kasassa... isostring sekoitti ajatusta\r\n      if (moment(event.event_dates.starting_day).format(\"DD.MM.YYYY\") === moment(selectedDay).format(\"DD.MM.YYYY\")) {\r\n        let date = new Date();\r\n        date.setDate(date.getDate() + 0);\r\n        let isoDate = date.toISOString().substr(0, 10);\r\n        \r\n        //Mikäli etsitään eripäivän tapahtumia niin näytetään kaikki.\r\n        if (isoDate === selectedDay) {\r\n        \r\n          let startTime = new Date(event.event_dates.starting_day)\r\n          let endTime = new Date(event.event_dates.ending_day)\r\n          let dateNow = new Date()\r\n          let timeNow = dateNow.getTime()\r\n          let diffStar = new Date()\r\n          diffStar = startTime - timeNow\r\n          diffStar = diffStar / 1000 / 60 / 60\r\n\r\n          let diffEnd = new Date()\r\n          diffEnd = endTime - timeNow\r\n          diffEnd = diffEnd / 1000 / 60 / 60\r\n          // diffStar sekä diffEnd numerot ovat tunteja\r\n        \r\n          if (diffStar > 0 && diffStar < 3 || diffStar < 0 && diffEnd > 0) {\r\n            filtered.push(event)\r\n          }\r\n        } else {\r\n          filtered.push(event)\r\n        }\r\n      }\r\n    }\r\n    )\r\n    //filtteröidyt tapahtumat laitetaan vielä sorttausmyllyn läpi\r\n    filtered = Sort(filtered)\r\n    return filtered\r\n  }\r\n  /// Mikäli päivämäärä on 0 niin funktio pomppaa suoraan tänne ja näyttää \r\n  //kaikki alueelta päivämäärästä riippumatta\r\n  return events\r\n}\r\n","import store from '../GlobalStore/Store'\r\n\r\n\r\n// Takes input of events array. \r\n// Ouputs array of events that include one of selected tags.\r\n\r\nexport default function SearchByTag(events) {\r\n\r\n    const selectedTagsInCategories = store.getState().allTags\r\n\r\n\r\n    let selectedTags = []\r\n    selectedTagsInCategories.forEach(tagObject => {\r\n        if (tagObject.isChecked) {\r\n            selectedTags = selectedTags.concat(tagObject.tags)\r\n        }\r\n    })\r\n    let filtered = []\r\n\r\n    // if no tags are selected, return unaltered list\r\n    if (Array.isArray(selectedTags) && selectedTags.length === 0) {\r\n        return events\r\n    }\r\n\r\n    // for each event, if a selected tag is among the event tags, the event passes\r\n    if (events != undefined) {\r\n        events.forEach(event => {\r\n            if (includesTag(event)) {\r\n                filtered.push(event)\r\n            }\r\n        })\r\n    }\r\n\r\n    // checks if an event tag is among selectedtags. Returns true if it does include \r\n    function includesTag(event) {\r\n        let includes = false\r\n        if (event.tags.some(tag => {\r\n            return selectedTags.includes(tag.name)\r\n        })) {\r\n            includes = true\r\n        }\r\n        return includes\r\n\r\n    }\r\n\r\n    return filtered\r\n    //\r\n\r\n}\r\n","import React from 'react'\r\nimport '../App.css'\r\nimport moment from 'moment'\r\nimport SearchByDate from '../LogicalFunctions/SearchByDate'\r\nimport SearchByEvent from '../LogicalFunctions/SearchByEvent'\r\nimport SearchByTag from '../LogicalFunctions/SearchByTag'\r\nimport store from '../GlobalStore/Store'\r\nimport { connect, useSelector, useDispatch } from 'react-redux'\r\nimport {setFilteredEvents} from '../GlobalStore/EventActions'\r\nexport default function ShowAll(props) {\r\n\r\n  const selectedDay = useSelector(state => state.selectedDate) \r\n  const dispatch = useDispatch()\r\n\r\n  let events = props.events\r\n  //let filted;\r\n  //Jos päivämäärä on valittu ->\r\n\r\n  //mennään etsimään isosta listasta kaikki tietyn päivämäärän tapahtumat SearchByDate -funktion kautta\r\n  \r\n  let filted = SearchByDate(props.events, selectedDay)\r\n  \r\n  events = SearchByEvent(filted, props.event)\r\n  events = SearchByTag(events)\r\n  \r\n  //Mikäli käyttäjä on nollannut hakukentän ja päivämääräkentän niin isolista laitetaan filteröidynlistan päälle\r\n  //Tämä ei toistaiseksi vaikuta mitenkään latitude/longitude muokkauksiin :/\r\n  if (props.event === 0 && selectedDay === 0) {\r\n    events = props.event\r\n  }\r\n\r\n  // Tag filter\r\n  \r\n  //events = SearchByTag(events)\r\n  // kaikki filterit käyty läpi, päivitetään store\r\n  dispatch(setFilteredEvents(events))\r\n  \r\n  return (\r\n    <div></div>\r\n  )\r\n} ","import Sort from './SortEvents'\r\n\r\nexport default function SearchByEvent(events, event) {\r\n\r\n  // Funktioon tuodaan kaikki eventit mitkä paketissa on, mikäli tämä on ainut/ensimmäinen filtteri, niin events on se iso lista\r\n  // tuodaan myös event joka on haettu tapahtumanimi\r\n  let letEvents = events;\r\n  //luodaan uusi taulukkomuuttuja\r\n  let filtered = [];\r\n  if (event !== 0) {\r\n    //käydään lista läpi ja tarkastellaan onko tapahtumalla suomalaista nimeä, jos ei niin tarkastetaan onko \r\n    //englantilaista nimeä ja siitä sitten ruotsin kielistä nimeä.\r\n    letEvents = events.map((events, i) => {\r\n\r\n      let name = events.name.fi;\r\n\r\n      if (name === null) {\r\n        name = events.name.en\r\n      }\r\n\r\n      if (name === null) {\r\n        name = events.name.sv\r\n      }\r\n\r\n      //tapahtuman nimi sekä hakukentässä oleva teksti laitetaan pieneksi jolloin tarkastelu on paljon helpompaa\r\n      name = name.toLowerCase();\r\n      event = event.toLowerCase();\r\n      //mikäli nimi sisältää hakusanan niin tapahtuma lisätään uuteen taulukkomuuttaajaan\r\n      if (name.includes(event) === true) {\r\n        filtered.push(events)\r\n      }\r\n    }\r\n    )\r\n    //filtteröidyt tapahtumat laitetaan vielä sorttausmyllyn läpi\r\n    filtered = Sort(filtered)\r\n    return filtered\r\n  }\r\n  /// Mikäli eventtitietoa ei olla rassattu niin funktio pomppaa tänne suoraan\r\n  return letEvents\r\n}","import React, { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setTags } from '../GlobalStore/TagActions';\r\n\r\n\r\nexport default function ShowTagOptions() {\r\n\r\n    const options = useSelector(state => state.allTags)\r\n    const dispatch = useDispatch()\r\n    const [uselessState, setUselessState] = useState(0)\r\n\r\n    function boxChecked(event) {\r\n        let tagID = options.findIndex(tag => tag.categoryTitle == event.target.id)\r\n        let tagsCopy = options\r\n        tagsCopy[tagID] = {...tagsCopy[tagID], isChecked: event.target.checked}\r\n        dispatch(setTags(tagsCopy))\r\n        setUselessState(uselessState+1)\r\n    }\r\n\r\n    function getTagStatus(tag) {\r\n        return tag.isChecked\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Form>\r\n                {options.map((tag) => (\r\n                    <div key={tag.categoryTitle} className=\"mb-3\">\r\n                        <Form.Check\r\n                            type={\"checkbox\"}\r\n                            id={tag.categoryTitle}\r\n                            label={tag.categoryTitle}\r\n                            onChange={boxChecked}\r\n                            checked={getTagStatus(tag)}\r\n                        />\r\n                    </div>\r\n                ))}\r\n            </Form>\r\n        </div>\r\n    )\r\n}","\r\n// param is string\r\nexport function addTag(newTag) {\r\n    return ({\r\n        type: 'ADD_TAG',\r\n        tag: newTag\r\n    })\r\n}\r\n// param is string\r\nexport function removeTag(targetTag) {\r\n    return ({\r\n        type: 'REMOVE_TAG',\r\n        tag: targetTag\r\n    })\r\n}\r\n// param is array of all selected tags\r\nexport function setTags(tagArray) {\r\n    return ({\r\n        type: 'SET_CHOSEN_TAGS',\r\n        tags: tagArray\r\n    })\r\n}","export function setUserLocation(lat, long) {\r\n    return ({\r\n        type: 'SET_USER_LOCATION',\r\n        userLocation: { latitude: lat, longitude: long }\r\n    })\r\n}\r\n\r\nexport function setLocationRange(range) {\r\n    return ({\r\n        type: 'SET_LOCATION_RANGE',\r\n        range\r\n    })\r\n}\r\n//\r\n//\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setLocationRange } from '../GlobalStore/LocationActions'\r\nimport { Form } from 'react-bootstrap'\r\n\r\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css'\r\nimport RangeSlider from 'react-bootstrap-range-slider'\r\n\r\nfunction Slider(props) {\r\n\r\n  const range = useSelector(state => state.range)\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <div>\r\n      <RangeSlider\r\n        min='1'\r\n        max='20'\r\n        size='lg'\r\n        tooltip='auto'\r\n        value={range}\r\n        onChange={event => dispatch(setLocationRange(parseInt(event.target.value)))}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Slider","export function setNow(timeNow) {\r\n    return ({\r\n        type: 'SET_TIME_NOW',\r\n        time: timeNow\r\n    })\r\n}\r\n\r\nexport function setDate(selectedDate) {\r\n    return ({\r\n        type: 'SET_SELECTED_DATE',\r\n        selectedDate\r\n    })\r\n}","import React from \"react\";\r\nimport Slider from '../SharedViewComponents/DistanceSlider'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setDate } from '../GlobalStore/TimeActions'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport InfoFooter from './InfoFooter'\r\nimport { Container } from \"react-bootstrap\";\r\n\r\n\r\n\r\nexport default function ToolbarFooter() {\r\n\r\n    const state = useSelector(state => state)\r\n    const range = state.range\r\n    const selectedDate = state.selectedDate\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className=\"toolbarfooter\">\r\n            <Container fluid={true}>\r\n                <Row>\r\n                    <Col xs={12} md={8}>\r\n                        Range: {range} km\r\n                <Slider />\r\n                    </Col>\r\n                    <Col xs={12} md={4}>\r\n                        <p>date: <input id=\"selectday\" type=\"date\" value={selectedDate} onChange={event => dispatch(setDate(event.target.value))} /></p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <InfoFooter />\r\n        </div>\r\n    )\r\n}\r\n//content div a needs a margin-bottom?","import React, { useEffect, useState } from 'react'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nexport default function SingleCard(props) {\r\n\r\n    let name = props.name;\r\n    let dateAndTime = props.time\r\n    let address = props.address\r\n    let desc = props.desc\r\n    let distance = props.distance\r\n\r\n    let infoUrl = props.info_url;\r\n    let disable = false;\r\n    let buttonColor = \"primary\"\r\n    if (infoUrl === null) {\r\n        disable = true\r\n        buttonColor = \"secondary\"\r\n    }\r\n\r\n    return (\r\n        <Card style={{ marginTop: 10 }} bg='light'>\r\n            <Card.Body>\r\n                <Row style={{ paddingBottom: 20 }}>\r\n                    <Col >\r\n                        <Card.Title>{name}</Card.Title>\r\n                        <Card.Text>{dateAndTime}<br />{address}</Card.Text>\r\n                        <Card.Text>{desc}</Card.Text>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={6}>{distance} m</Col>\r\n                    <Col xs={6}>\r\n                        {/* Jos otetaan lisätietoa ominaisuus käyttöön, tulee allaoleva rivi kommentoida pois.*/}\r\n                        {/* <Button variant=\"info\" style={{ marginRight: 10 }}>Show more</Button> */}\r\n                        <Button href={infoUrl} target=\"_blank\" variant={buttonColor} disabled={disable}>WWW</Button>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport { Map, TileLayer, Marker, Popup, Circle } from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport L from 'leaflet'\r\nimport icon from 'leaflet/dist/images/marker-icon.png'\r\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png'\r\nimport MarkerClusterGroup from 'react-leaflet-markercluster'\r\nimport { renderToStaticMarkup } from 'react-dom/server'\r\nimport { divIcon } from 'leaflet'\r\nimport { useSelector } from 'react-redux'\r\nimport ToolbarFooter from '../SharedViewComponents/ToolbarFooter'\r\n\r\nimport SearchByDate from '../LogicalFunctions/SearchByDate'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Card from 'react-bootstrap/Card'\r\nimport moment from 'moment'\r\nimport SearchByEvent from '../LogicalFunctions/SearchByEvent'\r\nimport SingleCard from '../SharedViewComponents/SingleCard'\r\nimport SearchByTag from '../LogicalFunctions/SearchByTag'\r\nimport { setUserLocation } from '../GlobalStore/LocationActions'\r\n\r\nconst MapView = () => {\r\n\r\n  const state = useSelector(state => state)\r\n  const filteredEvents = state.filteredEvents\r\n  const range = state.range\r\n  const userLocation = state.userLocation\r\n\r\n  const [zoom, setZoom] = React.useState(15)\r\n  const location = { lat: userLocation.latitude, lng: userLocation.longitude }\r\n  const iconMarkup = renderToStaticMarkup(\r\n    <span style={{ color: 'Tomato' }}>\r\n      <i className='fas fa-street-view fa-3x' />\r\n    </span>\r\n  )\r\n\r\n  const customMarkerIcon = divIcon({\r\n    html: iconMarkup,\r\n  })\r\n\r\n  const DefaultIcon = L.icon({\r\n    iconUrl: icon,\r\n    shadowUrl: iconShadow\r\n  })\r\n\r\n  L.Marker.prototype.options.icon = DefaultIcon\r\n\r\n  return (\r\n    <div className=\"mapDivContainer\">\r\n      <Map center={location} zoom={zoom}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n        />\r\n        <MarkerClusterGroup>\r\n          {filteredEvents.map((event, i) => (\r\n            <Marker key={i} position={[event.location.lat, event.location.lon]}>\r\n              <Popup>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Row style={{ paddingBottom: 20 }}>\r\n                      <Col xs={12} md={12}>\r\n                        {/* <Card.Title>{event.name.fi}</Card.Title>\r\n                      <Card.Text>\r\n                        <p>{event.description.intro}</p>\r\n                        <p>{event.location.address.locality}</p>\r\n                        <p>Osoite: {event.location.address.street_address}</p>\r\n                        <p>Pvm ja aloitusaika {moment(`${event.event_dates.starting_day}`).format(\"DD.MM.YYYY HH:mm\")}</p>\r\n                        <p>Etäisyys: { (L.latLng(location.lat, location.lng).distanceTo(L.latLng(event.location.lat, event.location.lon))).toFixed(0) } m</p>\r\n                      </Card.Text> */}\r\n                        <SingleCard\r\n                          name={event.name.fi}\r\n                          desc={event.description.intro}\r\n                          address={event.location.address.street_address}\r\n                          time={moment(`${event.event_dates.starting_day}`).format(\"DD.MM.YYYY HH:mm\")}\r\n                          distance={(L.latLng(location.lat, location.lng).distanceTo(L.latLng(event.location.lat, event.location.lon))).toFixed(0)}\r\n                          infoUrl={event.info_url}>\r\n                        </SingleCard>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col xs={6}>\r\n                        {/* <Button variant=\"primary\" style={{ marginRight: 10 }}>Show more</Button>\r\n                        <Button\r\n                          href={event.info_url}\r\n                          target=\"_blank\"\r\n                          variant=\"secondary\">WWW</Button> */}\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n\r\n              </Popup>\r\n            </Marker>\r\n          ))}\r\n        </MarkerClusterGroup>\r\n        <Marker key={1} position={[location.lat, location.lng]} icon={customMarkerIcon} ></Marker>\r\n        <Circle center={[location.lat, location.lng]} radius={range * 1000} />\r\n      </Map >\r\n      <ToolbarFooter />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapView;","export default function distance(lat1, lon1, lat2, lon2) {\r\n    var radlat1 = Math.PI * lat1/180\r\n    var radlat2 = Math.PI * lat2/180\r\n    var theta = lon1-lon2\r\n    var radtheta = Math.PI * theta/180\r\n    var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\r\n    dist = Math.acos(dist)\r\n    dist = dist * 180/Math.PI\r\n    dist = dist * 60 * 1.1515\r\n    dist = dist * 1.609344\r\n    return dist\r\n}\r\n\r\n\r\n","import store from '../GlobalStore/Store';\r\nimport DistanceBetweenPoints from './DistanceBetweenPoints';\r\n\r\n// Takes input of event array, gets range and users location from store\r\n// Outputs array of events that are within range\r\n\r\nexport default function FilterByDistance(events) {\r\n\r\n    //console.log(\"incoming events: \", events.length)\r\n\r\n\r\n\r\n    const range = store.getState().range\r\n    const userLocation = store.getState().userLocation\r\n\r\n    function isInRange(event) {\r\n        let distance = DistanceBetweenPoints(event.location.lat, event.location.lon,\r\n            userLocation.latitude, userLocation.longitude)\r\n        if (distance <= range) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    let filtered = []\r\n\r\n    events.forEach(event => {\r\n        if (isInRange(event)) {\r\n            filtered.push(event)\r\n        }\r\n    })\r\n\r\n    return filtered\r\n\r\n}","import { setFilteredEvents } from '../GlobalStore/EventActions';\r\nimport store from '../GlobalStore/Store';\r\nimport FilterByDistance from './FilterByDistance';\r\nimport SearchByDate from './SearchByDate';\r\nimport SearchByTag from './SearchByTag';\r\nimport SortEvents from './SortEvents';\r\n\r\n// Takes all events from store and filters them, saves them in filteredEvents\r\n\r\nexport default function RunEventFilters() {\r\n\r\n    const state = store.getState()\r\n    const date = state.selectedDate\r\n\r\n    //console.log('RunEventFilters. Events to filter', state.allEvents.length)\r\n\r\n    let filteredEvents = state.allEvents\r\n\r\n\r\n    filteredEvents = SearchByDate(filteredEvents, date)\r\n    //console.log('After SearchByDate, events left: ', filteredEvents.length)\r\n\r\n    filteredEvents = SearchByTag(filteredEvents)\r\n    //console.log('After SearchByTag, events left: ', filteredEvents.length)\r\n\r\n\r\n    filteredEvents = FilterByDistance(filteredEvents)\r\n    //console.log('After FilterByDistance, events left: ', filteredEvents.length)\r\n    filteredEvents = SortEvents(filteredEvents)\r\n\r\n    //console.log('Filtered events: ', filteredEvents)\r\n\r\n    store.dispatch(setFilteredEvents(filteredEvents))\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useStore, useDispatch, useSelector } from 'react-redux'\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport Slider from './DistanceSlider'\r\nimport ToDay from '../LogicalFunctions/GetToday'\r\nimport { setDate } from '../GlobalStore/TimeActions'\r\nimport { setLocationRange } from '../GlobalStore/LocationActions'\r\nimport ShowTagOptions from './ShowTagOptions'\r\nimport RunEventFilters from '../LogicalFunctions/RunEventFilters'\r\n\r\nexport default function Filtteri(props) {\r\n\r\n  const state = useSelector(state => state)\r\n  const range = state.range\r\n  const selectedDate = state.selectedDate\r\n  const dispatch = useDispatch()\r\n\r\n  const [event, setEvent] = useState(props.event)\r\n  const [area, setArea] = useState()\r\n  const [open, setOpen] = useState(false);\r\n\r\n  let happening;\r\n\r\n  const SeekName = (e) => {\r\n    happening = e.target.value\r\n\r\n    if (happening.length > 2) { setEvent(happening) }\r\n    if (happening.length < 1) { setEvent(0) }\r\n\r\n  }\r\n\r\n  const handleClose = () => {\r\n    props.ShowFilters(selectedDate, event, range);\r\n    setOpen(false);\r\n\r\n    RunEventFilters()\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    document.getElementById(\"eventos\").value = \"\"\r\n    document.getElementById(\"selectday\").value = \"\"\r\n    setOpen(false);\r\n  }\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  const HandleSlider = (event) => {\r\n    setArea(event)\r\n    /* fetchData(lat, lon, event)\r\n    setLoading('LOADING') */\r\n    //console.log(event)\r\n  }\r\n\r\n  const Reset = () => {\r\n    dispatch(setDate(ToDay))\r\n    setEvent(0)\r\n    document.getElementById(\"eventos\").value = \"\"\r\n    document.getElementById(\"selectday\").value = \"\"\r\n    dispatch(setLocationRange(1))\r\n  }\r\n\r\n\r\n  let text;\r\n  if (event === 0) {\r\n    text = 'event'\r\n  } else {\r\n    text = event\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Button variant=\"primary\" size='sm' className='mr-4 mb-2 float-right position-absolute'\r\n        style={{ 'top': '61px', 'right': '-1%' }} onClick={handleClickOpen}>Filters</Button>\r\n\r\n      <Modal show={open} onHide={handleClose} >\r\n        <Modal.Header>\r\n          <Modal.Title>Filters</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <div className=\"App\">\r\n            <p>name: <input id=\"eventos\" placeholder={text} onChange={SeekName} /></p>\r\n            <p>date: <input id=\"selectday\" type=\"date\" value={selectedDate} onChange={event => dispatch(setDate(event.target.value))} /></p>\r\n            <Slider HandleSlider={HandleSlider} />\r\n            <ShowTagOptions></ShowTagOptions>\r\n          </div>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n\r\n          <Button variant=\"danger\" onClick={Reset}>Reset</Button>\r\n\r\n          <Button variant=\"secondary\" onClick={handleCancel}>Cancel</Button>\r\n          <Button variant=\"primary\" onClick={handleClose}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}","import {setFilteredEvents } from '../GlobalStore/EventActions'\r\nimport { connect } from 'react-redux'\r\nimport store from '../GlobalStore/Store'\r\n\r\nexport default async function Fetching(lati, long, area) {\r\n\r\n  let events = [];\r\n\r\n  if (lati !== undefined && long !== undefined) {\r\n    //   let data = await fetch('v1/events/?distance_filter=' + lati + '%2C' + long + '%2C' + area, {\r\n   let data = await fetch('/api/events/?distance_filter=' + lati + '%2C' + long + '%2C' + area)\r\n      let response = data;\r\n      let json = await response.json();\r\n      events = JSON.parse(json)\r\n      \r\n      return events\r\n  }\r\n  \r\n  \r\n\r\n}","import { setAllEvents } from '../GlobalStore/EventActions'\r\nimport { useDispatch } from 'react-redux'\r\nimport store from '../GlobalStore/Store'\r\n\r\nexport default async function GetAllEvents() {\r\n\r\n    //const dispatch = useDispatch()\r\n\r\n    let events = [];\r\n    await fetch('api/events/')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                throw new Error('Getting all events failed');\r\n            }\r\n        })\r\n        .then(data => {\r\n            events = data.data\r\n        })\r\n        .catch(error => console.error(error));\r\n\r\n    store.dispatch(setAllEvents(events))\r\n    //return events\r\n\r\n\r\n\r\n\r\n}/*  */","import React, { useEffect, useState } from 'react'\r\nimport GetToday from '../LogicalFunctions/GetToday'\r\nimport Loading from '../SharedViewComponents/Loading'\r\nimport Show from './DebugginEventLister'\r\nimport ShowTagOptions from '../SharedViewComponents/ShowTagOptions'\r\nimport MapView from '../ViewComponents/MapView'\r\nimport Filtteri from '../SharedViewComponents/FilterEvents'\r\nimport Fetch from '../Services/FetchEventsNearUser'\r\nimport { setUserLocation } from '../GlobalStore/LocationActions'\r\nimport { useStore, useDispatch, connect, useSelector } from 'react-redux'\r\nimport GetAllEvents from '../Services/GetAllEvents'\r\nimport GetUserPosition from '../Services/GetUserPosition'\r\nimport Slider from '../SharedViewComponents/DistanceSlider'\r\nimport {setAllEvents} from '../GlobalStore/EventActions'\r\nimport RunEventFilters from '../LogicalFunctions/RunEventFilters'\r\n\r\nexport default function ListView() {\r\n  const store = useStore()\r\n  const range = useSelector(state => state.range)\r\n  const dispatch = useDispatch()\r\n\r\n  const [events, setEvents] = React.useState('')\r\n  const [selectedDay, setSelectedDay] = useState(store.getState().selectedDate)\r\n  const [event, setEvent] = React.useState(0)\r\n  const [loading, setLoading] = React.useState('LOADING')\r\n  const [loaded, setLoaded] = useState(false)\r\n  const [lat, setLat] = useState()\r\n  const [lon, setLon] = useState()\r\n  const [area, setArea] = useState(store.getState().range)\r\n\r\n\r\n  // Sivun alkuu käytetään useEffectiä jossa ladataan lista kun sivu aukeaa\r\n  useEffect(() => {\r\n    //Haetaan koordinaatit\r\n    if (navigator.geolocation) {\r\n      Coords();\r\n      fetchData(lat, lon, range);\r\n    }\r\n  }, \r\n  [lon, lat])\r\n  //[lon, lat, range])\r\n\r\n  // Rangen muuttamine laukaisee filtteröinnin\r\n  useEffect(() => {\r\n    RunEventFilters()\r\n  }, [range])\r\n\r\n  useEffect(()=> {\r\n    // haetaan kaikki eventit storeen\r\n    GetAllEvents()\r\n  }, [])\r\n\r\n\r\n  async function fetchData(lati, long, area) {\r\n    let data = (Fetch(lati, long, area))\r\n    // kutsutaan funktiota, joka hakee kaikki eventit\r\n    setEvents((await data))\r\n    if (events !== '') {\r\n      setLoading('')\r\n      setLoaded(true)\r\n    }\r\n  }\r\n\r\n  const Coords = () => {\r\n\r\n    let id, target, options;\r\n\r\n    function success(pos) {\r\n      let crd = pos.coords;\r\n      if (target.latitude !== crd.latitude && target.longitude !== crd.longitude) {\r\n        setLat(crd.latitude)\r\n        setLon(crd.longitude)\r\n        dispatch(setUserLocation(crd.latitude, crd.longitude))\r\n        navigator.geolocation.clearWatch(id);\r\n      }\r\n    }\r\n\r\n    function error(err) {\r\n      //console.warn('ERROR(' + err.code + '): ' + err.message);\r\n      setLat(60.1733244)\r\n      setLon(24.9410248)\r\n      dispatch(setUserLocation(lat, lon))\r\n    }\r\n\r\n    target = {\r\n      latitude: 0,\r\n      longitude: 0\r\n    };\r\n\r\n    options = {\r\n      enableHighAccuracy: true,\r\n      timeout: 5000,\r\n      maximumAge: 0\r\n    };\r\n\r\n    id = navigator.geolocation.watchPosition(success, error, options);\r\n\r\n    // GetUserPosition()\r\n    let lati = store.getState().userLocation.latitude\r\n    let long = store.getState().userLocation.longitude\r\n    if (lati === undefined && long === undefined) {\r\n      lati = lat\r\n      long = lon\r\n    }\r\n    //Haetaan funktion kautta päivämäärä joka muutetaan isomuotoon.\r\n    let toDay = GetToday()\r\n    setSelectedDay(toDay)\r\n    //Haetaan API\r\n    //console.log(lati, long, area)\r\n    fetchData(lati, long, area);\r\n  }\r\n\r\n  const ShowFilters = (dayNew, eventNew, areaNew) => {\r\n    areaNew = parseInt(areaNew)\r\n    console.log(eventNew)\r\n    if (dayNew !== undefined) {\r\n      setSelectedDay(dayNew)\r\n    }\r\n    if (eventNew !== undefined) {\r\n      setEvent(eventNew)\r\n    }\r\n    if (area !== areaNew) {\r\n      console.log(area, areaNew)\r\n      setArea(areaNew)\r\n      const alueNew = areaNew\r\n      fetchData(lat, lon, alueNew)\r\n      setLoading('LOADING')\r\n    }\r\n\r\n  }\r\n\r\n  // Niin kauan kuin loading state on 'LOADING' niin näytetään pelkästään lataus 'merkkiä'\r\n  if (loading === 'LOADING' && !loaded) {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1> </h1>\r\n        <Loading loading={loading} loaded={loaded} />\r\n      </div>\r\n    )\r\n  } else {\r\n    // API Rest on ladattu kokonaan ja näytetään koko lista.\r\n    return (\r\n      <div className=\"App\">\r\n        <h1> </h1>\r\n        <Filtteri ShowFilters={ShowFilters} event={event} />\r\n        <MapView />\r\n        {/* Range:{range}km\r\n        <Slider /> */}\r\n        <Loading loading={loading} loaded={loaded} />\r\n        <Show events={events} event={event} />\r\n      </div>\r\n    )\r\n\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useStore, useDispatch, connect, useSelector } from 'react-redux'\r\nimport { addTag, removeTag, setTags } from '../GlobalStore/TagActions'\r\nimport { Button } from 'react-bootstrap'\r\nimport DistanceBetweenPoints from '../LogicalFunctions/DistanceBetweenPoints'\r\nimport FilterByDistance from '../LogicalFunctions/FilterByDistance'\r\nimport RunEventFilters from '../LogicalFunctions/RunEventFilters'\r\n\r\n\r\nexport default function TestScreen() {\r\n    const allEvents = useSelector(state => state.allEvents)\r\n\r\n    const store = useStore()\r\n    //connect()\r\n\r\n    const printState = () => {\r\n        console.log(store.getState())\r\n    }\r\n    const printAllEvents = () => {\r\n        console.log(store.getState().allEvents)\r\n    }\r\n\r\n    const testcalc = () => {\r\n        //console.log(DistanceBetweenPoints(51.5112139, -0.119824, 48.8567, 2.3508))\r\n        console.log(DistanceBetweenPoints(60.185367584228516, 24.85649871826172, 60.2243072, 24.985599999999998))\r\n\r\n\r\n        \r\n    }\r\n\r\n    const timeRangeFiltering = () => {\r\n    \r\n    var t0 = performance.now()\r\n    let t1 = performance.now()\r\n\r\n    console.log(\"Filtering events by distance took \" + (t1 - t0) + \" milliseconds.\")\r\n    }\r\n\r\n    const testRangeFilter = () => {\r\n        console.log('in tests there is this many events', allEvents.length)\r\n        //console.log('in tests there is this many events', store.getState().length)\r\n        let filtered = FilterByDistance(allEvents)\r\n        console.log(\"events in range\", filtered.length)\r\n    }\r\n\r\n    const runfilters = () => {\r\n        console.log('Running events from allEvents => filters => filteredEvents')\r\n        RunEventFilters()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            < Button style={{ margin: 10 }} variant=\"primary\" onClick={printAllEvents} >\r\n                Print allEvents from store\r\n        </Button >\r\n\r\n            < Button style={{ margin: 10 }} variant=\"primary\" onClick={printState} >\r\n                Print Store State\r\n        </Button >\r\n\r\n        < Button style={{ margin: 10 }} variant=\"primary\" onClick={testcalc} >\r\n                calc distance\r\n        </Button >\r\n\r\n        < Button style={{ margin: 10 }} variant=\"primary\" onClick={testRangeFilter} >\r\n                Test range filter\r\n        </Button >\r\n\r\n        < Button style={{ margin: 10 }} variant=\"primary\" onClick={runfilters} >\r\n                RunEventFilters\r\n        </Button >\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n        \r\n        \r\n/* \r\nlat: 60.185367584228516\r\n​lon: 24.85649871826172\r\n\r\nlatitude: 60.2243072\r\n​​\r\nlongitude: 24.985599999999998\r\n\r\n*/","import React, { useState } from 'react'\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\nimport ListScreen from '../SharedViewComponents/ListScreen'\r\nimport ListView from './ListView'\r\nimport TestScreen from '../Tests/TestScreen'\r\nimport { connect } from 'react-redux'\r\nimport { useStore } from 'react-redux'\r\n\r\n// Entinen TabNav.js komponentti uudelleennimetty MainView.js, koska tämä tulisi olemaan alkunäkymä.\r\n// Pitäisikö ListView.js komponentin toiminnallisuus siirtää tälle sivulle fiksumman\r\n// arkkitehtuurin näkökulmasta? Nyt ListView tekee oikeastaan kaiken toiminnallisuuden,\r\n// vaikka nimensä mukaan sen pitäisi vain listata tapahtumat?\r\n\r\n\r\nconst MainView = () => {\r\n\r\n    const [key, setKey] = useState('TabKey')\r\n\r\n    connect()\r\n    const store = useStore()\r\n\r\n    return (\r\n        <Tabs defaultActiveKey=\"map\" id=\"uncontrolled-tab-example\" onSelect={(k) => setKey(k)} >\r\n            <Tab eventKey=\"map\" title=\"Map\">\r\n                <ListView />\r\n            </Tab>\r\n            <Tab eventKey=\"list\" title=\"List\"  >\r\n                <ListScreen />\r\n            </Tab>\r\n            {/* Kommentoidaan pois */}\r\n            <Tab eventKey=\"Tests\" title=\"Tests\">\r\n                <TestScreen />\r\n            </Tab>\r\n        </Tabs>\r\n\r\n    )\r\n}\r\n\r\nexport default MainView","import React from 'react'\r\nimport Footer from '../SharedViewComponents/InfoFooter'\r\n\r\nconst AboutView = () => {\r\n\r\n    return (\r\n        <div>\r\n            <p>about us</p>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n            Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\r\n            nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n            reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\r\n            Excepteur sint occaecat cupidatat non proident,\r\n                sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n            Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\r\n            nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n            reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\r\n            Excepteur sint occaecat cupidatat non proident,\r\n                sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n            Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\r\n            nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n            reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\r\n            Excepteur sint occaecat cupidatat non proident,\r\n                sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n            Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\r\n            nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n            reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\r\n            Excepteur sint occaecat cupidatat non proident,\r\n                sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n            Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\r\n            nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n            reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\r\n            Excepteur sint occaecat cupidatat non proident,\r\n                sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n            Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\r\n            nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n            reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\r\n            Excepteur sint occaecat cupidatat non proident,\r\n                sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n            Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\r\n            nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n            reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\r\n            Excepteur sint occaecat cupidatat non proident,\r\n                sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n            Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\r\n            nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n            reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\r\n            Excepteur sint occaecat cupidatat non proident,\r\n                sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n            <p>Lolololol ipsum dolor sit amet, consectetur adipiscing elit,\r\n            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n            Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\r\n            nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n            reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\r\n            Excepteur sint occaecat cupidatat non proident,\r\n                sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n            <p>Lorem.</p>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutView","import React, { useState, useEffect } from 'react'\r\nimport './App.css'\r\n\r\nimport NavBar from './ViewComponents/NavBar'\r\nimport MainView from './ViewComponents/MainView'\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\"\r\nimport ShowAboutUs from './ViewComponents/About'\r\n\r\nexport default function App() {\r\n\r\n  // Tests in console\r\n  /* useEffect(() => {\r\n    ReduxTests()\r\n  }, []) */\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <NavBar />\r\n        {/* <MainView /> */}\r\n        <Switch>\r\n\r\n          <Route path=\"/about\" component={ShowAboutUs}>\r\n            <ShowAboutUs />\r\n          </Route>\r\n\r\n          <Route path=\"/\" component={MainView}>\r\n            <MainView />\r\n          </Route>\r\n\r\n        </Switch>\r\n      </Router>\r\n    </div >\r\n  )\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport store from './GlobalStore/Store'\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n/*  */"],"sourceRoot":""}